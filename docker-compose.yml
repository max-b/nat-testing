version: "3.9"

services:
  snowflake-proxy-no-nat:
    build: ./snowflake
    entrypoint: /opt/start-scripts/noop-entrypoint.sh
    command: [ "proxy" , "-broker" , "http://$BROKER_WAN_ADDR:$BROKER_PORT/" , "-relay" , "wss://snowflake.torproject.net/", "-stun", "stun:$COTURN_WAN_ADDR1:3478", "-log", "/tmp/snowflake-proxy.log", "-unsafe-logging" ]
    environment:
      NAT_ROUTER_LAN_ADDR: "$PROXY_NAT_ROUTER_LAN_ADDR"
    volumes:
        - ./start-scripts:/opt/start-scripts
    networks:
      wan:
        ipv4_address: "$PROXY_NO_NAT_WAN_ADDR"
    cap_add:
      - ALL # TODO: check which for ip route

  snowflake-proxy:
    build: ./snowflake
    entrypoint: /opt/start-scripts/nat-client-entrypoint.sh
    command: [ "proxy" , "-broker" , "http://$BROKER_WAN_ADDR:$BROKER_PORT/" , "-relay" , "wss://snowflake.torproject.net/", "-stun", "stun:$COTURN_WAN_ADDR1:3478", "-log", "/tmp/snowflake-proxy.log", "-unsafe-logging" ]
    # attempt to try default stun:
    # command: [ "proxy" , "-broker" , "http://$BROKER_WAN_ADDR:$BROKER_PORT/" , "-relay" , "wss://snowflake.torproject.net/", "-log", "/tmp/snowflake-proxy.log", "-unsafe-logging" ]
    # using default broker and stun:
    # command: proxy -unsafe-logging -log /tmp/snowflake-proxy.log
    environment:
      NAT_ROUTER_LAN_ADDR: "$PROXY_NAT_ROUTER_LAN_ADDR"
    volumes:
        - ./start-scripts:/opt/start-scripts
    depends_on:
      - proxy-nat-router
    networks:
      proxy-lan:
        ipv4_address: "$PROXY_LAN_ADDR"
    cap_add:
      - ALL # TODO: check which for ip route

  proxy-nat-router:
    build: ./nat-router
    networks:
      proxy-lan:
        ipv4_address: "$PROXY_NAT_ROUTER_LAN_ADDR"
      wan:
        ipv4_address: "$PROXY_NAT_ROUTER_WAN_ADDR"
    volumes:
        - ./start-scripts:/opt/start-scripts
    command: /opt/start-scripts/nat-router-start.sh
    env_file:
     - .env
    environment:
      LAN_ADDR: "$PROXY_NAT_ROUTER_LAN_ADDR"
      LAN_SUBNET: "$PROXY_LAN_SUBNET"
      LAN_SUFFIX: "$PROXY_LAN_SUFFIX"
      WAN_ADDR: "$PROXY_NAT_ROUTER_WAN_ADDR"
      RANDOMIZE_NAT: "$RANDOMIZE_PROXY_NAT"
    cap_add:
      - ALL # TODO: check which for iptables

  snowflake-client-no-nat:
    build: ./snowflake
    entrypoint: /opt/start-scripts/snowflake-client-no-nat-entrypoint.sh
    command: tor -f /opt/torrc-client
    env_file:
     - .env
    environment:
      TORRC_PATH: /opt/torrc-client
    volumes:
        - ./start-scripts:/opt/start-scripts
    networks:
      wan:
        ipv4_address: "$CLIENT_NO_NAT_WAN_ADDR"
    cap_add:
      - ALL # TODO: check which for ip route

  snowflake-client:
    build: ./snowflake
    entrypoint: /opt/start-scripts/snowflake-client-entrypoint.sh
    command: tor -f /opt/torrc-client
    env_file:
     - .env
    environment:
      NAT_ROUTER_LAN_ADDR: "$CLIENT_NAT_ROUTER_LAN_ADDR"
      TORRC_PATH: /opt/torrc-client
    volumes:
        - ./start-scripts:/opt/start-scripts
    depends_on:
      - client-nat-router
    networks:
      client-lan:
        ipv4_address: "$CLIENT_LAN_ADDR"
    cap_add:
      - ALL # TODO: check which for ip route

  client-nat-router:
    build: ./nat-router
    networks:
      client-lan:
        ipv4_address: "$CLIENT_NAT_ROUTER_LAN_ADDR"
      wan:
        ipv4_address: "$CLIENT_NAT_ROUTER_WAN_ADDR"
    volumes:
        - ./start-scripts:/opt/start-scripts
    command: /opt/start-scripts/nat-router-start.sh
    env_file:
     - .env
    environment:
      LAN_ADDR: "$CLIENT_NAT_ROUTER_LAN_ADDR"
      LAN_SUBNET: "$CLIENT_LAN_SUBNET"
      LAN_SUFFIX: "$CLIENT_LAN_SUFFIX"
      WAN_ADDR: "$CLIENT_NAT_ROUTER_WAN_ADDR"
      RANDOMIZE_NAT: "$RANDOMIZE_CLIENT_NAT"
    cap_add:
      - ALL # TODO: check which for iptables

  snowflake-broker:
    build: ./snowflake
    command: broker -addr ":$BROKER_PORT" -disable-tls -unsafe-logging -metrics-log /tmp/snowflake-broker-metrics.log -disable-geoip
    networks:
      wan:
        ipv4_address: "$BROKER_WAN_ADDR"

  coturn-server:
    build: ./coturn
    # image: coturn/coturn:4-debian
    entrypoint: /opt/start-scripts/coturn-entrypoint.sh
    command: ["--log-file=stdout"]
    networks:
      wan:
        ipv4_address: "$COTURN_WAN_ADDR1"
    env_file:
     - .env
    volumes:
        - ./start-scripts:/opt/start-scripts
    environment:
      WAN_ADDR1: "$COTURN_WAN_ADDR1"
      WAN_ADDR2: "$COTURN_WAN_ADDR2"
    cap_add:
      - ALL # TODO: check which for ip route


networks:
  proxy-lan:
    ipam:
      config:
        - subnet: "$PROXY_LAN_SUBNET/$PROXY_LAN_SUFFIX"
          ip_range: "$PROXY_LAN_SUBNET/$PROXY_LAN_SUFFIX"
          gateway: "$PROXY_LAN_HOST_GATEWAY"

  client-lan:
    ipam:
      config:
        - subnet: "$CLIENT_LAN_SUBNET/$CLIENT_LAN_SUFFIX"
          ip_range: "$CLIENT_LAN_SUBNET/$CLIENT_LAN_SUFFIX"
          gateway: "$CLIENT_LAN_HOST_GATEWAY"

  wan:
    ipam:
      config:
        - subnet: "$WAN_SUBNET/$WAN_SUFFIX"
          ip_range: "$WAN_SUBNET/$WAN_SUFFIX"
          gateway: "$WAN_HOST_GATEWAY"
